[user]
	name = AdelFael
	email = new19.adel@gmail.com
[alias]
	ac = !git add . && git commit -m
	st = status
	logg = log --graph --decorate --oneline --all
	df = diff
	dfs = diff --staged
	br = branch -av 
	brname = !git branch | grep "^*" | awk '{ print $2 }' 
	# List available aliases
	aliases = !git config --get-regexp alias | sed -re 's/alias\\.(\\S*)\\s(.*)$/\\1 = \\2/g'
	# Command shortcuts
	ci = commit
	co = checkout
	# Display tree-like log, because default log is a pain…
	lg = log --graph --date=relative --pretty=tformat:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%an %ad)%Creset'
	# Useful when you have to update your last commit
	# with staged files without editing the commit message.
	oops = commit --amend --no-edit
	# Ensure that force-pushing won't lose someone else's work (only mine).
	push-with-lease = push --force-with-lease
	# Rebase won’t trigger hooks on each "replayed" commit.
	# This is an ugly hack that will replay each commit during rebase with the
	# standard `commit` command which will trigger hooks
	rebase-with-hooks = rebase -x 'git reset --soft HEAD~1 && git commit -C HEAD@{1}'
	# List local commits that were not pushed to remote repository
	review-local = "!git lg @{push}.."
	# Edit last commit message
	reword = commit --amend
	# Undo last commit but keep changed files in stage
	uncommit = reset --soft HEAD~1
	# Remove file(s) from Git but not from disk
	untrack = rm --cache --
[color]
	ui = true
[help]
	autocorrect = 2
[credential]
	helper = store
